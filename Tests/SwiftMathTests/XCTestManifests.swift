#if !canImport(ObjectiveC)
import XCTest

extension AngleTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AngleTests = [
        ("testAngleAddition", testAngleAddition),
        ("testAngleCompoundAdditionAndAssignment", testAngleCompoundAdditionAndAssignment),
        ("testAngleCompoundSubtractionAndAssignment", testAngleCompoundSubtractionAndAssignment),
        ("testAngleDivide", testAngleDivide),
        ("testAngleMultiply", testAngleMultiply),
        ("testAngleSubtraction", testAngleSubtraction),
        ("testMakeAngleFromIntegerInDegrees", testMakeAngleFromIntegerInDegrees),
        ("testPostfixConstructsAngleFromFloatInDegrees", testPostfixConstructsAngleFromFloatInDegrees),
        ("testPostfixConstructsAngleFromIntInDegrees", testPostfixConstructsAngleFromIntInDegrees)
    ]
}

extension ClampTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ClampTests = [
        ("testClampReturnsMaximumValueWhenGreaterThanMaximum", testClampReturnsMaximumValueWhenGreaterThanMaximum),
        ("testClampReturnsMinimumValueWhenLessThanMinimum", testClampReturnsMinimumValueWhenLessThanMinimum),
        ("testClampReturnsSameValueWhenWithinRange", testClampReturnsSameValueWhenWithinRange)
    ]
}

extension Matrix4x4Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Matrix4x4Tests = [
        ("testIdentity", testIdentity),
        ("testInitWithFloats", testInitWithFloats),
        ("testInitWithFloatsIsRowMajor", testInitWithFloatsIsRowMajor),
        ("testInitWithVector4IsColumnMajor", testInitWithVector4IsColumnMajor),
        ("testInitWithVectors", testInitWithVectors)
    ]
}

extension RectTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RectTests = [
        ("testRectEquatable", testRectEquatable)
    ]
}

extension Vector2fTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Vector2fTests = [
        ("testVectorMultiplyWithMatrix4x4", testVectorMultiplyWithMatrix4x4),
        ("testVectorsAreEqualUsingEquatable", testVectorsAreEqualUsingEquatable),
        ("testVectorsAreNotEqualUsingEquatable", testVectorsAreNotEqualUsingEquatable)
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AngleTests.__allTests__AngleTests),
        testCase(ClampTests.__allTests__ClampTests),
        testCase(Matrix4x4Tests.__allTests__Matrix4x4Tests),
        testCase(RectTests.__allTests__RectTests),
        testCase(Vector2fTests.__allTests__Vector2fTests)
    ]
}
#endif
